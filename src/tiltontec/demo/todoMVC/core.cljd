(ns tiltontec.demo.todoMVC.core
  (:require
    [tiltontec.model.core :as md]
    [tiltontec.cell.observer :refer [fn-obs]]
    [tiltontec.cell.core :refer [cF cF+ cF_ cI c_F cFonce]]
    [tiltontec.mx-flutter.core :as fx]
    [tiltontec.mx-flutter.store :as store]
    [tiltontec.demo.todoMVC.todo :as todo]
    [tiltontec.demo.todoMVC.input :as input]
    [tiltontec.demo.todoMVC.list-item :as item]
    [tiltontec.demo.todoMVC.footer :as footer]
    ["dart:convert" :as convert]
    ["package:localstore/localstore.dart" :as ls]
    ["package:flutter/widgets.dart" :as w]
    ["package:flutter/material.dart" :as m]
    ["package:flutter/painting.dart" :as p]
    [tiltontec.cell.base :refer [cinfo minfo] :as cty]
    [tiltontec.util.base :refer [dprn dp dpx]]))

(declare my-app-bar my-fab test-todos)

(defn make-app []
  (let [title "todos"]
    (fx/material-app
      {:title                      title
       :theme                      (m/ThemeData
                                     ;; todo BG of todos and entry should be whiter
                                     .fontFamily "Helvetica Neue"
                                     .backgroundColor (.fromRGBO m/Color 245 245 245 1))
       :debugShowCheckedModeBanner false}
      {:name    :app
       ;; todo persist in localstorage
       :todo-db (cI (doall
                      (map (fn [{:keys [title completed]}]
                             (todo/make-todo title completed))
                        test-todos)))}
      (fx/scaffold
        {:appBar                  (my-app-bar title)
         :backgroundColor         (.fromRGBO m/Color 245 245 245 1)
         #_#_:floatingActionButton (my-fab)
         :persistentFooterButtons [(fx/row
                                     {:mainAxisAlignment m.MainAxisAlignment/-center}
                                     (fx/expanded {:flex 1} (footer/items-remaining-display))
                                     (fx/expanded {:flex 2} (footer/completion-filters))
                                     (fx/expanded {:flex 1} (footer/clear-completed-button)))]}
        (fx/ink {:color m.Colors/-white}
          (fx/column
            (fx/row
              (fx/expanded {:flex 1}
                (input/todo-toggle-all))
              (fx/expanded {:flex 9}
                (fx/padding
                  {:padding ^:const (m.EdgeInsets/all 16.0)}
                  (input/todo-input))))

            (fx/expanded                                    ;; required sizer to join column
              (fx/list-view
                {:padding m.EdgeInsets/-zero}
                {:name :da-list-view}
                (map item/todo-list-item
                  (md/fmuval :app :todo-db))))))))))

;;; todo credits in alert
;;; todo .trim() the input and then check that it's not empty before creating a new todo.
;;; todo When editing mode is activated it will hide the other controls and bring forward
;;;      an input that contains the todo title, which should be focused (.focus()).
;;;      The edit should be saved on both blur and enter, and the editing class should be removed.
;;;      Make sure to .trim() the input and then check that it's not empty. If it's empty
;;;      the todo should instead be destroyed. If escape is pressed during the edit,
;;;      the edit state should be left and any changes be discarded.
;;; todo hide chevron if no todos, and at least hide the perm buttons
(defn my-app-bar [title]
  (fx/preferred-size
    {:preferredSize (.fromHeight m/Size 100)}
    (fx/app-bar {:backgroundColor (.fromRGBO m/Color 245 245 245 1)
                 :title           (fx/text
                                    {:style (p/TextStyle
                                              .fontFamily "Helvetica Neue"
                                              .color (todo/title-red)
                                              .fontWeight m.FontWeight/-w100
                                              .fontSize 64.0)}
                                    title)})))

(def test-todos
  ;;[]
  [{:title     "Wash car"
    :completed false}
   {:title     "Wash dog"
    :completed true}
   {:title     "Walk dog"
    :completed false}])