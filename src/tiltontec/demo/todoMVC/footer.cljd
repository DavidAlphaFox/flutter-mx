(ns tiltontec.demo.todoMVC.footer
  (:require
    [tiltontec.model.core :refer [mget mset! mswap!] :as md]
    [tiltontec.cell.observer :refer [fn-obs]]
    [tiltontec.cell.core :refer [cF cF+ cF_ cI c_F cFonce]]
    [tiltontec.mx-flutter.core :as fx]
    [tiltontec.mx-flutter.store :as store]
    [tiltontec.demo.todoMVC.todo :as todo]

    ["dart:convert" :as convert]
    ["package:localstore/localstore.dart" :as ls]
    ["package:flutter/widgets.dart" :as w]
    ["package:flutter/material.dart" :as m]
    ["package:flutter/painting.dart" :as p]
    [tiltontec.cell.base :refer [cinfo minfo] :as cty]
    [tiltontec.util.base :refer [dprn dp dpx]]))

(defn items-remaining-display []
  (fx/text! {}
    {:name :items-left}
    (let [db (md/fmuval :app :todo-db)
          left (remove #(mget % :completed) db)]
      (str (count left) (if (= 1 (count left))
                          " item" " items")))))

(defn completion-filters []
  ;; todo BUG switching All to Active after any td delete crashes on setState
  (fx/row
    {:mainAxisAlignment m.MainAxisAlignment/-spaceEvenly}
    {:name      :completions
     :selection (cI :all)}
    (let [choice (fn [completion-enum option$]
                   (fx/ink-well
                     {:onTap (fx/cb-with-ctx [me ctx]
                               (fx/->CBAsIs
                                 #(mset! (md/fasc :completions)
                                    :selection completion-enum)))}
                     (fx/container
                       {:decoration (cF (when (mget me :selected?)
                                          (m/BoxDecoration
                                            .border (.all m/Border .color (todo/title-red) .width 0.5)
                                            .borderRadius ^:const (m.BorderRadius/all (m.Radius/circular 4.0)))))}
                       {:completion-enum completion-enum
                        :selected?       (cF (= (mget me :completion-enum)
                                               (mget (md/fasc :completions) :selection)))}
                       (fx/padding
                         {:padding ^:const (m.EdgeInsets/all 3.0)}
                         (m/Text option$)))))]
      (list
        (choice :all "All")
        (choice :active "Active")
        (choice :done "Done")))))

(defn clear-completed-button []
  (fx/visibility!
    {:visible           (cF (let [db (md/fmuval :app :todo-db)]
                              (if (some (fn [todo]
                                          (mget todo :completed)) db)
                                true false)))
     :maintainSize      true
     :maintainAnimation true
     :maintainState     true}
    {:name :clear-completed-button}
    (fx/text-button
      ;; todo with-ctx+for-flutter
      {:onPressed (fx/cb-with-ctx [me ctx]
                    (fx/->CBAsIs
                      (fn []
                        (let [app (md/fasc :app)]
                          (mset! (md/fasc :app) :todo-db
                            (remove #(mget % :completed)
                              (mget app :todo-db)))))))
       #_#_:style (m/ButtonStyle .foregroundColor (.all m/MaterialStateProperty (.-black87 m/Colors)))}
      (fx/text
        #_ {:style (p/TextStyle
                  .fontWeight m.FontWeight/-w300
                  .decoration m.TextDecoration/-underline)
         }
        "Clear done"))))