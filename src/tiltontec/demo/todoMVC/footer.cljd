(ns tiltontec.demo.todoMVC.footer
  (:require
    [tiltontec.model.core :as md]
    [tiltontec.cell.observer :refer [fn-obs]]
    [tiltontec.cell.core :refer [cF cF+ cF_ cI c_F cFonce]]
    [tiltontec.mx-flutter.core :as fx]
    [tiltontec.mx-flutter.store :as store]
    [tiltontec.demo.todoMVC.todo :as todo]

    ["dart:convert" :as convert]
    ["package:localstore/localstore.dart" :as ls]
    ["package:flutter/widgets.dart" :as w]
    ["package:flutter/material.dart" :as m]
    ["package:flutter/painting.dart" :as p]
    [tiltontec.cell.base :refer [cinfo minfo] :as cty]
    [tiltontec.util.base :refer [dprn dp dpx]]))

(defn items-left-display []
  (fx/text! {}
    ;; todo warn (how?) if they use regular text with rule or c-in
    {:name :items-left}
    (let [db (md/fmuval :app :todo-db)
          left (remove #(md/mget % :completed) db)]
      (dp :items-left-sees!!!! (count left) (doall (map (fn [todo]
                                                          [(md/mget todo :sid)
                                                           (md/mget todo :title)])
                                                     left)))
      (str (count left) (if (= 1 (count left))
                          " item" " items")))))

(defn completion-filters []
  (fx/row
    {:mainAxisAlignment m.MainAxisAlignment/spaceEvenly}
    (fx/expanded {:flex 1} (m/Text "Active"))
    (fx/expanded {:flex 1}
      (fx/container
        {:decoration (m/BoxDecoration
                       :border (.all m/Border :color (.-grey m/Colors) :width 1)
                       :borderRadius ^:const (m.BorderRadius/all (m.Radius/circular 3.0)))}

        (fx/center (m/Text "All"))))

    (fx/expanded {:flex 1} (m/Text "Fini"))))

(defn clear-completed-button []
  (fx/visibility!
    {:visible           (cF (let [db (md/fmuval :app :todo-db)]
                              (if (some (fn [todo]
                                          (md/mget todo :completed)) db)
                                true false)))
     :maintainSize      true
     :maintainAnimation true
     :maintainState     true}
    {:name :clear-completed-button}
    (fx/text-button
      {:onPressed (fx/cb-with-ctx [me ctx]
                    (fx/->CBAsIs
                      (fn []
                        (let [app (md/fasc :app)
                              db (md/mget app :todo-db)
                              remaining (remove #(md/mget % :completed) db)]
                          (dp :db-in db)
                          (dp :rem remaining)
                          (md/mset! (md/fasc :app) :todo-db remaining)))))}
      (m/Text "Clear completed"))))