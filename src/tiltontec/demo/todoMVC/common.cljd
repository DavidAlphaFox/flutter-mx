(ns tiltontec.demo.todoMVC.common
  (:require
    ["package:flutter/material.dart" :as m]
    ["package:shared_preferences/shared_preferences.dart" :as prefs]
    [tiltontec.mx-flutter.core :as fx]
    [tiltontec.cell.base :refer [cinfo minfo] :as cty]
    [tiltontec.util.base :refer [dprn dp dpx]]))

(defmacro as-dart-callback [[& cb-params] & body]
  `(tiltontec.demo.todoMVC.common/with-ctx+as-is [~'me ~'ctx]
     (fn [~@cb-params]
       (tiltontec.cell.base/with-mx-isolation
         (binding []
           ~@body)))))

(defn title-red []
  (.fromRGBO m/Color 184 63 69 0.5))

(defmacro my-app []
  ;; fasc "captures" 'me
  `(tiltontec.model.core/fasc :app))

(defmacro my-todo-list []
  `(tiltontec.model.core/mget (tiltontec.model.core/fasc :app) :todo-list))

;;; ---------------------------------------------------
;;; the dance between Flutter and MX is a bit intricate
;;; these macros try to hide the plumbing without being obscure.

(defmacro with-ctx+as-is [[me ctx] callback-fn]
  `(tiltontec.mx-flutter.core/in-my-context [~me ~ctx]
     (tiltontec.mx-flutter.core/->CBAsIs
       ~callback-fn)))

(defmacro as-is [callback-fn]
  `(tiltontec.mx-flutter.core/->CBAsIs
     ~callback-fn))