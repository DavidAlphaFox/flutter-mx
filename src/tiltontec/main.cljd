(ns tiltontec.main
  (:require
    ["package:flutter/material.dart" :as m]
    ["package:flutter/widgets.dart" :as w]
    ["package:flutter/widgets.dart" :as w]
    ["package:flutter/foundation.dart" :as f]
    ;["dart:io" :as io]

    [tiltontec.model.core :as md]
    [tiltontec.matrix.base
     :refer [prog1 wtrx dprn dp dpx trx]]
    [tiltontec.matrix.api :refer [minfo] :as mx]
    [tiltontec.flutter-mx.core :as fx]

    ;[tiltontec.testing :as testing]
    ;[tiltontec.test.lazy-cells :as test-lazy]
    ;
    ;
    ;[tiltontec.example.benc-async :as bca]
    ;[tiltontec.example.mathpaper :as tek]
    ;[tiltontec.example.x00-hello-world :as hello]
    [tiltontec.example.x01-counter :as counter]
    ;[tiltontec.example.x03-physics-sim :as x03]
    ;[tiltontec.example.x05-fab :as x05]
    ;[tiltontec.example.x020-reactive-stream :as x020]
    ;[tiltontec.example.x030_codelab_namer :as x030]
    ;[tiltontec.demo.todoMVC.core :as todo]
    ;[tiltontec.example.x035-timer-poll :as x035]
    ))

(defn main []
  (dp :main-entry)
  (md/md-quiesce-feature! true)

  (.ensureInitialized w/WidgetsFlutterBinding)

  (wtrx [0 999 :run-app]
    (fx/run-app
      (fx/fx-render nil
        ;; Change the  namespace below to one above and rebuild to see a different example. <<<<<<< Updated upstream
        ;; ------ VVVVV --------------------------------------------
        (counter/make-app))))


  ;; (dp :run-app-fini @prior-app)
  ;; (testing/run-tests)
  (dp :main-exit))

;; (set! r/debugPaintSizeEnabled true)
;; (w/debugDumpApp)

; (defn repl-ish []
;  (do (dart:core/print :on-reload)
;      (bt/scan! 3)
;      (await (.delayed dc/Future (dc/Duration .milliseconds 2000)))
;      (await (.delayed dc/Future (dc/Duration .milliseconds 2000)))
;      (await (.delayed dc/Future (dc/Duration .milliseconds 2000))))
;  (do
;    nil
;    ))

;(defmacro hot-reload-detector
;  [& body]
;  (let [flutter-build-ctx (vary-meta `ctx# assoc :tag `w/BuildContext)
;        state-sym `^w/State state#
;        super-sym `super#
;        user-widget
;        `(reify :extends (w/StatefulWidget.)
;           :no-meta true
;           (~'createState [_#]
;            (reify :extends w/State
;              :no-meta true
;              (~'initState [~state-sym]
;               (.initState ~(vary-meta state-sym assoc :tag 'super))
;               nil)
;              (^void ~'reassemble [this#]
;               (.reassemble ^{:tag ~'super} this#)
;               (repl-ish))
;              (~'dispose [~state-sym]
;               (.dispose ~(vary-meta state-sym assoc :tag 'super)))
;              (~'build [~state-sym ~flutter-build-ctx]
;               ~@body))))]
;    user-widget))
;
; (defn main [] ;<id:1673573645>
;  (fx/run-app
;   (fx/hot-reload-detector
;    (fx/fx-render nil (home/make)))))