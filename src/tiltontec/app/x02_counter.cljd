(ns tiltontec.app.x02-counter
  (:require
    [tiltontec.cell.core :refer [cF cF+ cF_ cI]]
    [tiltontec.model.core :as md]
    [tiltontec.mx-flutter.core :as fx]
    ["package:flutter/widgets.dart" :as w]
    ["package:flutter/material.dart" :as m]
    ["package:flutter/painting.dart" :as p]))

(defn make-app []
  (fx/material-app
    {:title "Welcome to mxFlutter World"
     :theme (m/ThemeData .primarySwatch m.Colors/-blue)}
    (fx/scaffold
      {:appBar               (fx/app-bar {:title (cF (let [ctr (md/fm* :z-counter)]
                                                       ;; true reactivity, albeit pointless
                                                       (fx/text! {} {:name :appbartitle}
                                                         (str "Counter = " (md/mget ctr :value)))))})
       ;; todo have not-to-be call not-to-be on these non-kid leaves
       :floatingActionButton (cF (fx/floating-action-button
                                   {:onPressed (fx/->CBAsIs
                                                 (fn ^void []
                                                   ;; the FAB shows a "+". It increments the count where the count lives.
                                                   (md/mswap! (md/fm* :z-counter) :value inc)))
                                    :tooltip "Increment"}
                                   (m/Icon m.Icons/-add .color m.Colors/-black)))}
      (fx/center
        (fx/column
          {:mainAxisAlignment m.MainAxisAlignment/-center}
          (fx/text {:style (p/TextStyle .color m.Colors/-black
                             .fontSize 18.0)}
            "You clicked the button so many times:")
          (fx/text!
            {:style (fx/cb-with-ctx [_ ctx]
                      (.-headline4 (.-textTheme (m.Theme/of ctx))))}
            {:name  :z-counter
             ;;  "in place" state: the counter widget is where the count resides.
             :value (cI 0)}
            (str (md/my-val))))))))




