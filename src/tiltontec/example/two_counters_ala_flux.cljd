(ns tiltontec.example.two-counters-ala-flux
  (:require
    [clojure.string :as str]
    [tiltontec.util.base :refer [dprn dp dpx]]
    [tiltontec.cell.base :refer [cinfo minfo] :as cty]
    [tiltontec.cell.core :as cell :refer [cF cFnil cI]]
    [tiltontec.model.base :refer [md-cell]]
    [tiltontec.model.core :refer [make mx-par mget md-kids cFkids fmu fmuv] :as md]
    [tiltontec.mx-flutter.core :as fx
     :refer [ material-app center text row expanded elevated-button scaffold column]]
    ["package:flutter/widgets.dart"
     :refer [Text State StatefulWidget StatelessWidget]]
    ["package:flutter/material.dart" :as m
     :refer [MainAxisAlignment Colors Theme Icon Icons ThemeData runApp AppBar State]]
    ["package:flutter/painting.dart"
     :refer [TextStyle]]))

(defn build-counter [counter-key]
  (expanded
    (fx/column
      {:mainAxisAlignment MainAxisAlignment/center}
      {:name  :counter-col
       :value (cF (let [app (md/fm-ascendant :counter-app me)]
                    (get-in (mget app :flux-store) [:counters counter-key])))}
      (text (str/capitalize (name counter-key)))
      (text
        {:style (fn [me ctx]
                  ;; todo this can be (theme-fn ....)
                  (-> (Theme/of ctx) .textTheme .displayLarge))}
        (str (md/fmuval :counter-col)))
      (elevated-button
        {:onPressed (cFnil (fn ^void []
                             (dprn dp dpx :incrementing-counter counter-key)
                             (md/mswap! (md/fm-ascendant :counter-app me)
                               :flux-store update-in [:counters counter-key] inc)))}
        (text "+")))))

(defn make-app []
  (material-app {:name       :counter-app
                 ; simulating a separate global store, we bind a purely independent Matrix data structure that
                 ; must be consulted for values. Pro tip: use `mswap! <the app> :flux-store update-in etc` to
                 ; increment either counter.
                 :flux-store (cI {:counters {:left 0 :right 0}})}
    {:title "Two Counters"
     :theme (cF (ThemeData :primarySwatch Colors/blue))}
    (scaffold
      {:appBar (AppBar :title (Text "Two Counters ala Flux"))}
      (center
        (row
          {:mainAxisAlignment MainAxisAlignment/center}
          (mapv #(build-counter %) [:left :right]))))))