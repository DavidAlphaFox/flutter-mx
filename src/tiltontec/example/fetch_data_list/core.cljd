(ns tiltontec.example.fetch-data-list.core
  "Flutter/MX Port of CLJD port of Etienne Theodore's
  Fetch Data List example: https://github.com/Kiruel/fetch-data-list?ref=etiennetheodore.com"
  (:require
    ["package:flutter/material.dart" :as m]
    ["package:http/http.dart" :as http]
    ["dart:convert" :as c]
    [tiltontec.flutter-mx.core :refer [as-dart-callback] :as fx]
    [tiltontec.matrix.api :refer [dp cFn cF+ cI mget mkids mkids mswap!] :as mx]
    [tiltontec.example.fetch-data-list.api.albums :refer [get-album]]
    [tiltontec.example.fetch-data-list.pages.album-detail :as album-detail]))

(defn- build-list-items [body]
  (fx/list-view+builder
    {:padding     (m.EdgeInsets/symmetric .vertical 8.0)
     :itemCount   (count body)
     :itemBuilder (as-dart-callback [ctx idx]
                    (let [album (get-in body [idx])]
                      (fx/fx-render ctx
                        ;; ^^ we cannot give Dart an f/mx proxy, so we "render" to a proper Flutter widget
                        (fx/list-tile
                          {:title (fx/text (get album "title"))
                           :onTap (as-dart-callback []
                                    (fx/ctx-page-push ctx
                                      (fn [ctx]
                                        ;; ^^^ we need the ctx at the time the page builder is called
                                        ;; to pick up the current route.
                                        (album-detail/view ctx album))
                                      (str "/album-detail/" (get album "id"))))}))))}))

(defn make-app []
  (fx/material-app
    {:title "Fetch Data List Example"
     :theme (m/ThemeData .primarySwatch m/Colors.blue)}
    (fx/scaffold
      {:appBar (fx/app-bar {:title (fx/text "Fetch Data List Example")})}
      (fx/center {}
        {:response (cF+ [:async? true]
                     (get-album))}
        (if-some [{sc .-statusCode body .-body} ^http/Response (mget me :response)]
          (case sc
            200 (build-list-items (c/json.decode body))
            (fx/text (str "Something wrong happened, status code: " sc)))
          (m/CircularProgressIndicator))))))

