(ns tiltontec.example.hello-world
  (:require
    [clojure.string :as string]
    [tiltontec.cell.base :refer [mx-type unbound *depender*] :as cty]
    [tiltontec.cell.core :as cell
     :refer [cF cF+ cI]]
    [tiltontec.model.core :refer [mget] :as md]
    [tiltontec.mx-flutter.core :as fx
     :refer [render-fx material-app scaffold  center text]]
    ;; State StatefulWidget StatelessWidget]]
    ["package:flutter/material.dart" :as m :refer [AppBar Colors Text ThemeData]]
    ["package:flutter/painting.dart" :refer [TextStyle] :as p]))

(defn make-app []
  (material-app {}
    {:title "Hunt for Teal mxFlutter"
     :theme (cF (ThemeData. :primarySwatch
                  (let [ttl (mget me :title)]
                    (cond
                      (string/includes? ttl "Red") m.Colors/red
                      (string/includes? ttl "Blue") m.Colors/blue
                      (string/includes? ttl "Green") m.Colors/green
                      (string/includes? ttl "Teal") m.Colors/teal
                      (string/includes? ttl "Yellow") m.Colors/yellow
                      :else m.Colors/white))))}
    (scaffold {}
      ;; todo arrange for awaken/quiesce on stray edges
      {:appBar               (AppBar.
                               :title (m/Text. "Welcome to mxFlutter"))}
      (center {} {}
        (text {} {:style (p/TextStyle.
                              :color m.Colors/black
                              :fontSize 32.0)}
          "hello, world\\n")))))

