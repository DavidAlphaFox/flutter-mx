(ns tiltontec.example.hello-world
  (:require
    [clojure.string :as string]
    [tiltontec.util.core :as util
     :refer [atom? rmap-setf err rmap-meta-setf set-ify difference]]
    [tiltontec.util.base
     :refer [trx wtrx dprn dp dpx nowtrx prog1 dprn dp dpx *trx?* *trdeep* def-rmap-slots]]
    [tiltontec.cell.base :refer [mx-type minfo cinfo unbound *depender*] :as cty]
    [tiltontec.cell.core :as cell
     :refer [cF cF+ cI]]
    [tiltontec.model.core :refer [mget] :as md]
    [tiltontec.mx-flutter.tag :as tag]
    [tiltontec.mx-flutter.core :as fx
     :refer [material-app scaffold center text]]
    ;; State StatefulWidget StatelessWidget]]
    ["package:flutter/widgets.dart" :as w
     :refer [Text Center Expanded Column State StatefulWidget StatelessWidget]]
    ["package:flutter/material.dart" :as m :refer [AppBar Colors ThemeData]]
    ["package:flutter/painting.dart" :refer [TextStyle] :as p]))

(defn make-app []
  (material-app
    {:title "Hunt for Teal mxFlutter"
     :theme (cF (ThemeData :primarySwatch
                  ;; a computed, reactive value, just for fun, but we offer no way for
                  ;; the title to change, so the theme will never get to "react"
                  (let [ttl (mget me :title)]
                    (cond
                      (string/includes? ttl "Teal") Colors/teal
                      (string/includes? ttl "Yellow") Colors/yellow
                      :else Colors/blue))))}
    (scaffold
      ;; todo arrange for awaken/quiesce on stray edges
      {:appBar (AppBar
                 :title (m/Text "Welcome to mxFlutter 42"))}
      (center
        {:name :hello-center}
        (fx/textless {:overflow m.TextOverflow/ellipsis
                      :style    (TextStyle
                                  :color Colors/cyan
                                  :fontSize 32.0)}
          "hello, world super duper ooskoolio\\n")))))