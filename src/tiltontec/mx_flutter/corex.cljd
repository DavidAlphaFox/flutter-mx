(ns tiltontec.mx-flutter.corex
  (:require ["package:flutter/material.dart" :as m
             :refer [MaterialApp Widget Scaffold MainAxisAlignment Colors Theme
                     FloatingActionButton Icon Icons ThemeData runApp AppBar State]]
            ["package:flutter/widgets.dart" :as w
             :refer [Text Center Expanded Column State StatefulWidget StatelessWidget]]
            ["package:flutter/painting.dart" :as p
             :refer [TextStyle]]
            [tiltontec.util.base :refer [dprn dp dpx]]
            [tiltontec.cell.base :refer [mx-type unbound minfo cinfo Model PObserver observe] :as cty]
            [tiltontec.util.core :as util
             :refer [atom? rmap-setf err rmap-meta-setf set-ify difference]]
            [tiltontec.model.core :refer [make mget md-kids mswap! cFkids] :as md]
            [tiltontec.mx-flutter.tag :refer [deftag PDartWidget beefer render-fx] :as tag]))


(defmacro textless [fx-props mx-props & children]
  (let []
    `(apply tiltontec.model.core/make
       :kids (tiltontec.model.core/cFkids ~@children)
       :fx-gen (fn [ctx me]
                 (w/Text (first (md/md-kids me))  ;; need a render-fx here?
                   ~@(let [kvs (for [[k# _#] fx-props]
                                 [k# `(tiltontec.model.core/mget me ~k#)])]
                       (apply concat kvs))))
       (concat
         (vec (apply concat (seq ~fx-props)))
         (vec (apply concat (seq ~mx-props)))))))

(defmacro centerless [fx-props mx-props & children]
  (let []
    `(apply tiltontec.model.core/make
       :kids (tiltontec.model.core/cFkids ~@children)
       :fx-gen (fn [ctx me]
                 ; (m/Center
                 ;        :child (render-fx ctx (first (tiltontec.model.core/md-kids me))))
                 (m/Center
                   :child (render-fx ctx (first (tiltontec.model.core/md-kids me)))
                   ~@(let [kvs (for [[k# _#] fx-props]
                                 [k# `(tiltontec.model.core/mget me ~k#)])]
                       (apply concat kvs))))
       (concat
         (vec (apply concat (seq ~fx-props)))
         (vec (apply concat (seq ~mx-props)))))))

(defmacro text [fx-props mx-props & children]
  `(apply tiltontec.model.core/make
     :kids (tiltontec.model.core/cFkids ~@children)
     :fx-gen (fn [ctx me]
               (reify :extends m/StatefulWidget
                 (~'createState [_#]
                   (util/rmap-meta-setf [:state-ref me]
                     (reify :extends w/State
                       (~'build [_# ctx]
                         (w/Text (first (md/md-kids me))
                           ~@(let [kvs (for [[k# _#] fx-props]
                                         [k# `(tiltontec.mx-flutter.tag/fx-eval ctx me
                                                (tiltontec.model.core/mget me ~k#))])]
                               (apply concat kvs)))))))))
     (concat
       (vec (apply concat (seq ~fx-props)))
       (vec (apply concat (seq ~mx-props))))))
