(ns example.demo.tts.draft)

(comment
  ; === Fix run-on

  (cF+n [:watch (fn [_ me new prior c]
                  (when (mx-bound? prior)
                    (when (not= :off (mget (fmu :dash) :play-status))
                      (fts-stop me))
                    (fts-speak me)))]
    (mget me :lg-pref))

  ;=== One word chyron ===========================

  (defn chyron []
    (container
      {:padding (m/EdgeInsets.symmetric .horizontal 16.0)}
      (fx/text {:textAlign m/TextAlign.center
                :style (p/TextStyle .color m/Colors.black
                         .fontSize 18.0)}
        {:name     :chyron}
        (or (:word (app-fts-progress)
              "*waiting*")))))

  (.setProgressHandler fts
    (fn [text startOffset endOffset word]
      (wmx-iso ;; <===========
        (mset! me
          :progress {:full-text text
                     :word word
                     :word-offset startOffset
                     :word-end endOffset}))))

  ; === multi word chyron ----------------------------------------------------

  (defn chyron []
    (container
      {:padding (m/EdgeInsets.symmetric .horizontal 16.0)}
      (fx/text {:textAlign m/TextAlign.center}
        {:name     :chyron
         :progress (cI nil)
         :phrase   (cF (when (not= :off (app-play-status))
                         (let [{:keys [word]} (mget me :progress)]
                           (if (nil? word) []
                             (take-last 5
                               (concat (if (mx-bound? _cache) _cache [])
                                 [word]))))))}
        (str/join "..." (mget me :phrase)))))

  ;;; === rate limit speech skip =================================

  (defn stop-button []
    (ignore-pointer {:ignoring (cF (or (= :off (app-play-status))
                                     (let [{:keys [full-text word-end]} (app-fts-progress)]
                                       (< word-end (/ (count full-text) 4)))))}
      (opacity {:opacity (cF (if (mav :ignoring) 0.2 1.0))}
        (speaking-control m/Colors.red m/Colors.redAccent m/Icons.stop "STOP" fts-stop))))

  (row {:mainAxisAlignment m/MainAxisAlignment.spaceEvenly}
    (auto-play)
    (rate-limit?))

  ;; fin
  )




