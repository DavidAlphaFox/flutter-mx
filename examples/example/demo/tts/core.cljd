(ns example.demo.tts.core
  "Originally, a straught port of the `flutter_tts` package example https://github.com/dlutton/flutter_tts/blob/master/example/lib/main.dart"
  (:require
    ["package:flutter/material.dart" :as m]
    ["package:flutter/painting.dart" :as p]
    ["package:flutter_tts/flutter_tts.dart" :as fts
     :refer [FlutterTts]]
    ["package:flutter/widgets.dart" :as w]
    [clojure.string :as str]
    [tilton.mx.api :as mx
     :refer [dp dpx cI cF cF+ cF+n cFn cFonce mget mget? mset! mswap! minfo fasc fasc-inclusive
             fmu muv fm* mav mx-bound? wmx-iso]]
    [tilton.fmx.api :as fx
     :refer [scaffold app-bar text center column hero material-app
             container row expanded icon padding opacity ignore-pointer
             checkbox-list-tile icon-button fx-render as-dart-callback]]
    [example.demo.tts.fts :as fts
     :refer [app-fts-status app-fts-progress fts-speak fts-pause fts-stop lg-lang]]
    [example.demo.tts.component :as comp
     :refer [lang-chooser geo-chooser speech-input speaking-control auto-play
             equalizer choice-header]]
    [example.demo.tts.poetry :as poetry]))

;;; --- play, stop, pause -------------------------------------------------------

(defn dashboard []
  (container {:padding (m/EdgeInsets.only .top 8 .bottom 8)}
    (row {:mainAxisAlignment m/MainAxisAlignment.spaceEvenly}
      {:name :dash}
      (if (some #{(app-fts-status)} [:off :paused])
        (speaking-control m/Colors.green m/Colors.greenAccent m/Icons.play_arrow "PLAY" fts-speak)
        (speaking-control m/Colors.blue m/Colors.blueAccent m/Icons.pause "PAUSE" fts-pause))
      (opacity {:opacity (cF (if (= :off (app-fts-status))
                               0.0 1.0))}
        (speaking-control m/Colors.red m/Colors.redAccent m/Icons.stop "STOP" fts-stop)))))

;;; ---  make app --------------------------------------------

(defn make-app []
  (material-app {}
    {:name :app
     :fts  (cF (fts/make-flutter-tts))}
    (scaffold
      {:appBar (app-bar {:title (m/Text "Flutter TTS Demo")})}
      (column
        {:crossAxisAlignment m/CrossAxisAlignment.stretch}
        (choice-header "Languages")
        (lang-chooser)
        (choice-header "Geography")
        (geo-chooser)
        (speech-input poetry/graves-jealousy)
        (dashboard)
        (equalizer)))))

