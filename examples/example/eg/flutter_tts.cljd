(ns example.eg.flutter-tts
  "Port of Dave Liepmann's ClojureDart port https://github.com/daveliepmann/ClojureDart/tree/main/samples/flutter_tutorial_building_layouts
  of Flutter 'Building layouts' tutorial https://docs.flutter.dev/ui/layout/tutorial"
  (:require
    ["package:flutter/material.dart" :as m]
    ["package:flutter/painting.dart" :as p]
    ["package:flutter_tts/flutter_tts.dart" :as fts]
    [clojure.string :as str]
    [tilton.mx.api :refer [dp cI cF cF+ cFn cFonce mget mget? mset!]]
    [tilton.fmx.api :as fx
     :refer [scaffold app-bar text center column hero material-app
             container row expanded icon padding in-my-context
             icon-button
             as-dart-callback]]))

(defn make-app []
  (material-app {}
    {:fts   (cF+ [:watch (fn [_ me newv _ _]
                           (dp :fts!! newv)
                           (when-let [fts newv]
                             (.setSharedInstance fts true)
                             (.awaitSpeakCompletion fts true)
                             (.setLanguage fts "en-US")
                             (.setSpeechRate fts 0.5)
                             (.setPitch fts 1.0)))]
              (fts/FlutterTts))
     :langs (cF+ [:async? true
                  :watch (fn [_ _ newv _ _]
                           (dp :langs-f!! newv))]
              (.-getLanguages (mget me :fts)))}
    (scaffold
      {:appBar (app-bar {:title (m/Text "Flutter TTS Demo")})}
      (fx/single-child-scroll-view
        {:scrollDirection m/Axis.vertical}
        (column
          (input-section)
          (btn-section)
          (engine-section)
          (future-builder)
          (build-sliders))))))

(defn input-section []
  (container
    {:alignment m/Alignment.topCenter
     :padding   (m/EdgeInsets.only
                  .top 25.0 .left 25.0 .right 25.0)}
    (fx/text-field
      {:controller (cFonce (let [c (m/TextEditingController .text (mget me :value))]
                             (.addListener c
                               (fn [] (dp (str "Second text field: " (.-text c)))))
                             c))
       :onChanged  (as-dart-callback [text]
                     (mset! me :value text))
       :minLines   6 :maxLines 11}
      {:name  :text-in
       :value (cI "Hi, Mom!" :watch (fn [prop me newv priorv c]
                                      (dp (str "First text field: " newv))))})))

(defn btn-section []
  (container
    {:padding (m/EdgeInsets.only .top 50.0)}
    (row
      {:mainAxisAlignment m/MainAxisAlignment.spaceEvenly}
      (build-button-col m/Colors.green m/Colors.greenAccent m/Icons.play_arrow "PLAY" btn-speak)
      (build-button-col m/Colors.red m/Colors.redAccent m/Icons.stop "STOP" btn-stop)
      (build-button-col m/Colors.blue m/Colors.blueAccent m/Icons.pause "PAUSE" btn-pause))))

(defn btn-speak []
  (dp :speaking!!!!!!!))

;   Future _speak() async {
;    await flutterTts.setVolume(volume);
;    await flutterTts.setSpeechRate(rate);
;    await flutterTts.setPitch(pitch);
;
;    if (_newVoiceText != null) {
;      if (_newVoiceText!.isNotEmpty) {
;        await flutterTts.speak(_newVoiceText!);
;      }
;    }
;  }
(defn btn-stop []
  (dp :stop!!!!!!))
(defn btn-pause []
  (dp :pause!!!!!))

(defn build-button-col [color splash-color icon label func]
  (column
    {:mainAxisSize      m/MainAxisSize.min
     :mainAxisAlignment m/MainAxisAlignment.center}
    (icon-button
      {:icon        (fx/icon {:icon icon})
       :color       color
       :splashColor splash-color
       :onPressed   func})))

(defn engine-section []
  (text "engine section"))

(defn future-builder []
  (text "future section"))

(defn build-sliders []
  (text "sliders section"))

;body: SingleChildScrollView (
;                              scrollDirection: Axis.vertical,
;                              child: Column (
;                                              children: [
;                                                         _inputSection (),
;                                                         _btnSection (),
;                                                         _engineSection (),
;                                                         _futureBuilder (),
;                                                         _buildSliders (),
;                                                         if (isAndroid) _getMaxSpeechInputLengthSection (),
